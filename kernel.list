
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea000096 	b	8260 <main>

Disassembly of section .text:

00008004 <SetForeColour>:
    8004:	e3500801 	cmp	r0, #65536	; 0x10000
    8008:	21a0f00e 	movcs	pc, lr
    800c:	e59f10d4 	ldr	r1, [pc, #212]	; 80e8 <pixelLoop$+0x34>
    8010:	e1c100b0 	strh	r0, [r1]
    8014:	e1a0f00e 	mov	pc, lr

00008018 <SetGraphicsAddress>:
    8018:	e59f10cc 	ldr	r1, [pc, #204]	; 80ec <pixelLoop$+0x38>
    801c:	e5810000 	str	r0, [r1]
    8020:	e1a0f00e 	mov	pc, lr

00008024 <DrawPixel>:
    8024:	e59f20c0 	ldr	r2, [pc, #192]	; 80ec <pixelLoop$+0x38>
    8028:	e5922000 	ldr	r2, [r2]
    802c:	e5923004 	ldr	r3, [r2, #4]
    8030:	e2433001 	sub	r3, r3, #1
    8034:	e1510003 	cmp	r1, r3
    8038:	81a0f00e 	movhi	pc, lr
    803c:	e5923000 	ldr	r3, [r2]
    8040:	e2433001 	sub	r3, r3, #1
    8044:	e1500003 	cmp	r0, r3
    8048:	81a0f00e 	movhi	pc, lr
    804c:	e5922020 	ldr	r2, [r2, #32]
    8050:	e2833001 	add	r3, r3, #1
    8054:	e0200391 	mla	r0, r1, r3, r0
    8058:	e0822080 	add	r2, r2, r0, lsl #1
    805c:	e59f3084 	ldr	r3, [pc, #132]	; 80e8 <pixelLoop$+0x34>
    8060:	e1d330b0 	ldrh	r3, [r3]
    8064:	e1c230b0 	strh	r3, [r2]
    8068:	e1a0f00e 	mov	pc, lr

0000806c <DrawLine>:
    806c:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    8070:	e1a09000 	mov	r9, r0
    8074:	e1a0a002 	mov	sl, r2
    8078:	e1a0b001 	mov	fp, r1
    807c:	e1a0c003 	mov	ip, r3
    8080:	e159000a 	cmp	r9, sl
    8084:	c049400a 	subgt	r4, r9, sl
    8088:	c3e06000 	mvngt	r6, #0
    808c:	d04a4009 	suble	r4, sl, r9
    8090:	d3a06001 	movle	r6, #1
    8094:	e15b000c 	cmp	fp, ip
    8098:	c04c500b 	subgt	r5, ip, fp
    809c:	c3e07000 	mvngt	r7, #0
    80a0:	d04b500c 	suble	r5, fp, ip
    80a4:	d3a07001 	movle	r7, #1
    80a8:	e0848005 	add	r8, r4, r5
    80ac:	e08aa006 	add	sl, sl, r6
    80b0:	e08cc007 	add	ip, ip, r7

000080b4 <pixelLoop$>:
    80b4:	e139000a 	teq	r9, sl
    80b8:	113b000c 	teqne	fp, ip
    80bc:	08bd9ff0 	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
    80c0:	e1a00009 	mov	r0, r9
    80c4:	e1a0100b 	mov	r1, fp
    80c8:	ebffffd5 	bl	8024 <DrawPixel>
    80cc:	e1550088 	cmp	r5, r8, lsl #1
    80d0:	d0888005 	addle	r8, r8, r5
    80d4:	d0899006 	addle	r9, r9, r6
    80d8:	e1540088 	cmp	r4, r8, lsl #1
    80dc:	a0888004 	addge	r8, r8, r4
    80e0:	a08bb007 	addge	fp, fp, r7
    80e4:	eafffff2 	b	80b4 <pixelLoop$>
    80e8:	00008360 	.word	0x00008360
    80ec:	00008364 	.word	0x00008364

000080f0 <InitialiseFrameBuffer>:
    80f0:	e3500a01 	cmp	r0, #4096	; 0x1000
    80f4:	93510a01 	cmpls	r1, #4096	; 0x1000
    80f8:	93520020 	cmpls	r2, #32
    80fc:	83a00000 	movhi	r0, #0
    8100:	81a0f00e 	movhi	pc, lr
    8104:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8108:	e59f403c 	ldr	r4, [pc, #60]	; 814c <InitialiseFrameBuffer+0x5c>
    810c:	e5840000 	str	r0, [r4]
    8110:	e5841004 	str	r1, [r4, #4]
    8114:	e5840008 	str	r0, [r4, #8]
    8118:	e584100c 	str	r1, [r4, #12]
    811c:	e5842014 	str	r2, [r4, #20]
    8120:	e1a00004 	mov	r0, r4
    8124:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
    8128:	e3a01001 	mov	r1, #1
    812c:	eb00002f 	bl	81f0 <MailboxWrite>
    8130:	e3a00001 	mov	r0, #1
    8134:	eb00003a 	bl	8224 <MailboxRead>
    8138:	e3300000 	teq	r0, #0
    813c:	13a00000 	movne	r0, #0
    8140:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
    8144:	e1a00004 	mov	r0, r4
    8148:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    814c:	00008370 	.word	0x00008370

00008150 <GetGpioAddress>:
    8150:	e59f008c 	ldr	r0, [pc, #140]	; 81e4 <SetGpio+0x3c>
    8154:	e1a0f00e 	mov	pc, lr

00008158 <SetGpioFunction>:
    8158:	e3500035 	cmp	r0, #53	; 0x35
    815c:	93510007 	cmpls	r1, #7
    8160:	81a0f00e 	movhi	pc, lr
    8164:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8168:	e1a02000 	mov	r2, r0
    816c:	ebfffff7 	bl	8150 <GetGpioAddress>

00008170 <functionLoop$>:
    8170:	e3520009 	cmp	r2, #9
    8174:	8242200a 	subhi	r2, r2, #10
    8178:	82800004 	addhi	r0, r0, #4
    817c:	8afffffb 	bhi	8170 <functionLoop$>
    8180:	e0822082 	add	r2, r2, r2, lsl #1
    8184:	e1a01211 	lsl	r1, r1, r2
    8188:	e3a03007 	mov	r3, #7
    818c:	e1a03213 	lsl	r3, r3, r2
    8190:	e1e03003 	mvn	r3, r3
    8194:	e5902000 	ldr	r2, [r0]
    8198:	e0022003 	and	r2, r2, r3
    819c:	e1811002 	orr	r1, r1, r2
    81a0:	e5801000 	str	r1, [r0]
    81a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000081a8 <SetGpio>:
    81a8:	e3500035 	cmp	r0, #53	; 0x35
    81ac:	81a0f00e 	movhi	pc, lr
    81b0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    81b4:	e1a02000 	mov	r2, r0
    81b8:	ebffffe4 	bl	8150 <GetGpioAddress>
    81bc:	e1a032a2 	lsr	r3, r2, #5
    81c0:	e1a03103 	lsl	r3, r3, #2
    81c4:	e0800003 	add	r0, r0, r3
    81c8:	e202201f 	and	r2, r2, #31
    81cc:	e3a03001 	mov	r3, #1
    81d0:	e1a03213 	lsl	r3, r3, r2
    81d4:	e3310000 	teq	r1, #0
    81d8:	05803028 	streq	r3, [r0, #40]	; 0x28
    81dc:	1580301c 	strne	r3, [r0, #28]
    81e0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    81e4:	20200000 	.word	0x20200000

000081e8 <GetMailboxBase>:
    81e8:	e59f006c 	ldr	r0, [pc, #108]	; 825c <rightmail$+0x24>
    81ec:	e1a0f00e 	mov	pc, lr

000081f0 <MailboxWrite>:
    81f0:	e310000f 	tst	r0, #15
    81f4:	11a0f00e 	movne	pc, lr
    81f8:	e351000f 	cmp	r1, #15
    81fc:	81a0f00e 	movhi	pc, lr
    8200:	e1a02000 	mov	r2, r0
    8204:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8208:	ebfffff6 	bl	81e8 <GetMailboxBase>

0000820c <wait1$>:
    820c:	e5903018 	ldr	r3, [r0, #24]
    8210:	e3130102 	tst	r3, #-2147483648	; 0x80000000
    8214:	1afffffc 	bne	820c <wait1$>
    8218:	e0822001 	add	r2, r2, r1
    821c:	e5802020 	str	r2, [r0, #32]
    8220:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008224 <MailboxRead>:
    8224:	e350000f 	cmp	r0, #15
    8228:	81a0f00e 	movhi	pc, lr
    822c:	e1a01000 	mov	r1, r0
    8230:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8234:	ebffffeb 	bl	81e8 <GetMailboxBase>

00008238 <rightmail$>:
    8238:	e5902018 	ldr	r2, [r0, #24]
    823c:	e3120101 	tst	r2, #1073741824	; 0x40000000
    8240:	1afffffc 	bne	8238 <rightmail$>
    8244:	e5902000 	ldr	r2, [r0]
    8248:	e202300f 	and	r3, r2, #15
    824c:	e1330001 	teq	r3, r1
    8250:	1afffff8 	bne	8238 <rightmail$>
    8254:	e3c2000f 	bic	r0, r2, #15
    8258:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    825c:	2000b880 	.word	0x2000b880

00008260 <main>:
    8260:	e3a0d902 	mov	sp, #32768	; 0x8000
    8264:	e3a00b01 	mov	r0, #1024	; 0x400
    8268:	e3a01c03 	mov	r1, #768	; 0x300
    826c:	e3a02010 	mov	r2, #16
    8270:	ebffff9e 	bl	80f0 <InitialiseFrameBuffer>
    8274:	e3300000 	teq	r0, #0
    8278:	1a000006 	bne	8298 <noError$>
    827c:	e3a00010 	mov	r0, #16
    8280:	e3a01001 	mov	r1, #1
    8284:	ebffffb3 	bl	8158 <SetGpioFunction>
    8288:	e3a00010 	mov	r0, #16
    828c:	e3a01000 	mov	r1, #0
    8290:	ebffffc4 	bl	81a8 <SetGpio>

00008294 <error$>:
    8294:	eafffffe 	b	8294 <error$>

00008298 <noError$>:
    8298:	ebffff5e 	bl	8018 <SetGraphicsAddress>
    829c:	e3a05000 	mov	r5, #0
    82a0:	e3a06000 	mov	r6, #0
    82a4:	e3a09000 	mov	r9, #0
    82a8:	e3a0b000 	mov	fp, #0

000082ac <render$>:
    82ac:	e1a00005 	mov	r0, r5
    82b0:	eb000014 	bl	8308 <Random>
    82b4:	e1a0a000 	mov	sl, r0
    82b8:	eb000012 	bl	8308 <Random>
    82bc:	e1a0c000 	mov	ip, r0
    82c0:	e1a0500c 	mov	r5, ip
    82c4:	e1a00006 	mov	r0, r6
    82c8:	e2866001 	add	r6, r6, #1
    82cc:	e1a06806 	lsl	r6, r6, #16
    82d0:	e1a06826 	lsr	r6, r6, #16
    82d4:	ebffff4a 	bl	8004 <SetForeColour>
    82d8:	e1a00009 	mov	r0, r9
    82dc:	e1a0100b 	mov	r1, fp
    82e0:	e1a0ab2a 	lsr	sl, sl, #22
    82e4:	e1a0cb2c 	lsr	ip, ip, #22
    82e8:	e35c0c03 	cmp	ip, #768	; 0x300
    82ec:	2affffee 	bcs	82ac <render$>
    82f0:	e1a0200a 	mov	r2, sl
    82f4:	e1a0300c 	mov	r3, ip
    82f8:	e1a0900a 	mov	r9, sl
    82fc:	e1a0b00c 	mov	fp, ip
    8300:	ebffff59 	bl	806c <DrawLine>
    8304:	eaffffe8 	b	82ac <render$>

00008308 <Random>:
    8308:	e3a01cef 	mov	r1, #61184	; 0xef00
    830c:	e0010190 	mul	r1, r0, r1
    8310:	e0010190 	mul	r1, r0, r1
    8314:	e0811000 	add	r1, r1, r0
    8318:	e2810049 	add	r0, r1, #73	; 0x49
    831c:	e1a0f00e 	mov	pc, lr

00008320 <GetTimerAddress>:
    8320:	e59f0034 	ldr	r0, [pc, #52]	; 835c <loop$+0x14>
    8324:	e1a0f00e 	mov	pc, lr

00008328 <GetTimeStamp>:
    8328:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    832c:	ebfffffb 	bl	8320 <GetTimerAddress>
    8330:	e1c000d4 	ldrd	r0, [r0, #4]
    8334:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008338 <TimerFunction>:
    8338:	e1a03000 	mov	r3, r0
    833c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8340:	ebfffff8 	bl	8328 <GetTimeStamp>
    8344:	e1a02000 	mov	r2, r0

00008348 <loop$>:
    8348:	ebfffff6 	bl	8328 <GetTimeStamp>
    834c:	e0401002 	sub	r1, r0, r2
    8350:	e1510003 	cmp	r1, r3
    8354:	9afffffb 	bls	8348 <loop$>
    8358:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    835c:	20003000 	.word	0x20003000
