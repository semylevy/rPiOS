
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea0000d0 	b	8348 <main>

Disassembly of section .text:

00008004 <SetForeColour>:
    8004:	e3500801 	cmp	r0, #65536	; 0x10000
    8008:	21a0f00e 	movcs	pc, lr
    800c:	e59f11b8 	ldr	r1, [pc, #440]	; 81cc <stringLoopEnd$+0x4>
    8010:	e1c100b0 	strh	r0, [r1]
    8014:	e1a0f00e 	mov	pc, lr

00008018 <SetGraphicsAddress>:
    8018:	e59f11b0 	ldr	r1, [pc, #432]	; 81d0 <stringLoopEnd$+0x8>
    801c:	e5810000 	str	r0, [r1]
    8020:	e1a0f00e 	mov	pc, lr

00008024 <DrawPixel>:
    8024:	e59f21a4 	ldr	r2, [pc, #420]	; 81d0 <stringLoopEnd$+0x8>
    8028:	e5922000 	ldr	r2, [r2]
    802c:	e5923004 	ldr	r3, [r2, #4]
    8030:	e2433001 	sub	r3, r3, #1
    8034:	e1510003 	cmp	r1, r3
    8038:	81a0f00e 	movhi	pc, lr
    803c:	e5923000 	ldr	r3, [r2]
    8040:	e2433001 	sub	r3, r3, #1
    8044:	e1500003 	cmp	r0, r3
    8048:	81a0f00e 	movhi	pc, lr
    804c:	e5922020 	ldr	r2, [r2, #32]
    8050:	e2833001 	add	r3, r3, #1
    8054:	e0200391 	mla	r0, r1, r3, r0
    8058:	e0822080 	add	r2, r2, r0, lsl #1
    805c:	e59f3168 	ldr	r3, [pc, #360]	; 81cc <stringLoopEnd$+0x4>
    8060:	e1d330b0 	ldrh	r3, [r3]
    8064:	e1c230b0 	strh	r3, [r2]
    8068:	e1a0f00e 	mov	pc, lr

0000806c <DrawLine>:
    806c:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    8070:	e1a09000 	mov	r9, r0
    8074:	e1a0a002 	mov	sl, r2
    8078:	e1a0b001 	mov	fp, r1
    807c:	e1a0c003 	mov	ip, r3
    8080:	e159000a 	cmp	r9, sl
    8084:	c049400a 	subgt	r4, r9, sl
    8088:	c3e06000 	mvngt	r6, #0
    808c:	d04a4009 	suble	r4, sl, r9
    8090:	d3a06001 	movle	r6, #1
    8094:	e15b000c 	cmp	fp, ip
    8098:	c04c500b 	subgt	r5, ip, fp
    809c:	c3e07000 	mvngt	r7, #0
    80a0:	d04b500c 	suble	r5, fp, ip
    80a4:	d3a07001 	movle	r7, #1
    80a8:	e0848005 	add	r8, r4, r5
    80ac:	e08aa006 	add	sl, sl, r6
    80b0:	e08cc007 	add	ip, ip, r7

000080b4 <pixelLoop$>:
    80b4:	e139000a 	teq	r9, sl
    80b8:	113b000c 	teqne	fp, ip
    80bc:	08bd9ff0 	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
    80c0:	e1a00009 	mov	r0, r9
    80c4:	e1a0100b 	mov	r1, fp
    80c8:	ebffffd5 	bl	8024 <DrawPixel>
    80cc:	e1550088 	cmp	r5, r8, lsl #1
    80d0:	d0888005 	addle	r8, r8, r5
    80d4:	d0899006 	addle	r9, r9, r6
    80d8:	e1540088 	cmp	r4, r8, lsl #1
    80dc:	a0888004 	addge	r8, r8, r4
    80e0:	a08bb007 	addge	fp, fp, r7
    80e4:	eafffff2 	b	80b4 <pixelLoop$>

000080e8 <DrawCharacter>:
    80e8:	e350007f 	cmp	r0, #127	; 0x7f
    80ec:	83a00000 	movhi	r0, #0
    80f0:	83a01000 	movhi	r1, #0
    80f4:	81a0f00e 	movhi	pc, lr
    80f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    80fc:	e1a04001 	mov	r4, r1
    8100:	e1a05002 	mov	r5, r2
    8104:	e59f60c8 	ldr	r6, [pc, #200]	; 81d4 <stringLoopEnd$+0xc>
    8108:	e0866200 	add	r6, r6, r0, lsl #4

0000810c <lineLoop$>:
    810c:	e5d67000 	ldrb	r7, [r6]
    8110:	e3a08008 	mov	r8, #8

00008114 <charPixelLoop$>:
    8114:	e2588001 	subs	r8, r8, #1
    8118:	ba000007 	blt	813c <charPixelLoopEnd$>
    811c:	e1a07087 	lsl	r7, r7, #1
    8120:	e3170c01 	tst	r7, #256	; 0x100
    8124:	0afffffa 	beq	8114 <charPixelLoop$>
    8128:	e0840008 	add	r0, r4, r8
    812c:	e1a01005 	mov	r1, r5
    8130:	ebffffbb 	bl	8024 <DrawPixel>
    8134:	e3380000 	teq	r8, #0
    8138:	1afffff5 	bne	8114 <charPixelLoop$>

0000813c <charPixelLoopEnd$>:
    813c:	e2855001 	add	r5, r5, #1
    8140:	e2866001 	add	r6, r6, #1
    8144:	e316000f 	tst	r6, #15
    8148:	1affffef 	bne	810c <lineLoop$>
    814c:	e3a00008 	mov	r0, #8
    8150:	e3a01010 	mov	r1, #16
    8154:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00008158 <DrawString>:
    8158:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    815c:	e1a07000 	mov	r7, r0
    8160:	e1a04002 	mov	r4, r2
    8164:	e1a06004 	mov	r6, r4
    8168:	e1a05003 	mov	r5, r3
    816c:	e1a08001 	mov	r8, r1

00008170 <stringLoop$>:
    8170:	e2588001 	subs	r8, r8, #1
    8174:	ba000013 	blt	81c8 <stringLoopEnd$>
    8178:	e5d79000 	ldrb	r9, [r7]
    817c:	e2877001 	add	r7, r7, #1
    8180:	e1a00009 	mov	r0, r9
    8184:	e1a01004 	mov	r1, r4
    8188:	e1a02005 	mov	r2, r5
    818c:	ebffffd5 	bl	80e8 <DrawCharacter>
    8190:	e339000a 	teq	r9, #10
    8194:	01a04006 	moveq	r4, r6
    8198:	00855001 	addeq	r5, r5, r1
    819c:	0afffff3 	beq	8170 <stringLoop$>
    81a0:	e3390009 	teq	r9, #9
    81a4:	10844000 	addne	r4, r4, r0
    81a8:	1afffff0 	bne	8170 <stringLoop$>
    81ac:	e0800100 	add	r0, r0, r0, lsl #2
    81b0:	e1a01006 	mov	r1, r6

000081b4 <stringLoopTab$>:
    81b4:	e0811000 	add	r1, r1, r0
    81b8:	e1540001 	cmp	r4, r1
    81bc:	aafffffc 	bge	81b4 <stringLoopTab$>
    81c0:	e1a04001 	mov	r4, r1
    81c4:	eaffffe9 	b	8170 <stringLoop$>

000081c8 <stringLoopEnd$>:
    81c8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
    81cc:	00008740 	.word	0x00008740
    81d0:	00008744 	.word	0x00008744
    81d4:	00008750 	.word	0x00008750

000081d8 <InitialiseFrameBuffer>:
    81d8:	e3500a01 	cmp	r0, #4096	; 0x1000
    81dc:	93510a01 	cmpls	r1, #4096	; 0x1000
    81e0:	93520020 	cmpls	r2, #32
    81e4:	83a00000 	movhi	r0, #0
    81e8:	81a0f00e 	movhi	pc, lr
    81ec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    81f0:	e59f403c 	ldr	r4, [pc, #60]	; 8234 <InitialiseFrameBuffer+0x5c>
    81f4:	e5840000 	str	r0, [r4]
    81f8:	e5841004 	str	r1, [r4, #4]
    81fc:	e5840008 	str	r0, [r4, #8]
    8200:	e584100c 	str	r1, [r4, #12]
    8204:	e5842014 	str	r2, [r4, #20]
    8208:	e1a00004 	mov	r0, r4
    820c:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
    8210:	e3a01001 	mov	r1, #1
    8214:	eb00002f 	bl	82d8 <MailboxWrite>
    8218:	e3a00001 	mov	r0, #1
    821c:	eb00003a 	bl	830c <MailboxRead>
    8220:	e3300000 	teq	r0, #0
    8224:	13a00000 	movne	r0, #0
    8228:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
    822c:	e1a00004 	mov	r0, r4
    8230:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8234:	00008f50 	.word	0x00008f50

00008238 <GetGpioAddress>:
    8238:	e59f008c 	ldr	r0, [pc, #140]	; 82cc <SetGpio+0x3c>
    823c:	e1a0f00e 	mov	pc, lr

00008240 <SetGpioFunction>:
    8240:	e3500035 	cmp	r0, #53	; 0x35
    8244:	93510007 	cmpls	r1, #7
    8248:	81a0f00e 	movhi	pc, lr
    824c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8250:	e1a02000 	mov	r2, r0
    8254:	ebfffff7 	bl	8238 <GetGpioAddress>

00008258 <functionLoop$>:
    8258:	e3520009 	cmp	r2, #9
    825c:	8242200a 	subhi	r2, r2, #10
    8260:	82800004 	addhi	r0, r0, #4
    8264:	8afffffb 	bhi	8258 <functionLoop$>
    8268:	e0822082 	add	r2, r2, r2, lsl #1
    826c:	e1a01211 	lsl	r1, r1, r2
    8270:	e3a03007 	mov	r3, #7
    8274:	e1a03213 	lsl	r3, r3, r2
    8278:	e1e03003 	mvn	r3, r3
    827c:	e5902000 	ldr	r2, [r0]
    8280:	e0022003 	and	r2, r2, r3
    8284:	e1811002 	orr	r1, r1, r2
    8288:	e5801000 	str	r1, [r0]
    828c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008290 <SetGpio>:
    8290:	e3500035 	cmp	r0, #53	; 0x35
    8294:	81a0f00e 	movhi	pc, lr
    8298:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    829c:	e1a02000 	mov	r2, r0
    82a0:	ebffffe4 	bl	8238 <GetGpioAddress>
    82a4:	e1a032a2 	lsr	r3, r2, #5
    82a8:	e1a03103 	lsl	r3, r3, #2
    82ac:	e0800003 	add	r0, r0, r3
    82b0:	e202201f 	and	r2, r2, #31
    82b4:	e3a03001 	mov	r3, #1
    82b8:	e1a03213 	lsl	r3, r3, r2
    82bc:	e3310000 	teq	r1, #0
    82c0:	05803028 	streq	r3, [r0, #40]	; 0x28
    82c4:	1580301c 	strne	r3, [r0, #28]
    82c8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    82cc:	20200000 	.word	0x20200000

000082d0 <GetMailboxBase>:
    82d0:	e59f006c 	ldr	r0, [pc, #108]	; 8344 <rightmail$+0x24>
    82d4:	e1a0f00e 	mov	pc, lr

000082d8 <MailboxWrite>:
    82d8:	e310000f 	tst	r0, #15
    82dc:	11a0f00e 	movne	pc, lr
    82e0:	e351000f 	cmp	r1, #15
    82e4:	81a0f00e 	movhi	pc, lr
    82e8:	e1a02000 	mov	r2, r0
    82ec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    82f0:	ebfffff6 	bl	82d0 <GetMailboxBase>

000082f4 <wait1$>:
    82f4:	e5903018 	ldr	r3, [r0, #24]
    82f8:	e3130102 	tst	r3, #-2147483648	; 0x80000000
    82fc:	1afffffc 	bne	82f4 <wait1$>
    8300:	e0822001 	add	r2, r2, r1
    8304:	e5802020 	str	r2, [r0, #32]
    8308:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000830c <MailboxRead>:
    830c:	e350000f 	cmp	r0, #15
    8310:	81a0f00e 	movhi	pc, lr
    8314:	e1a01000 	mov	r1, r0
    8318:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    831c:	ebffffeb 	bl	82d0 <GetMailboxBase>

00008320 <rightmail$>:
    8320:	e5902018 	ldr	r2, [r0, #24]
    8324:	e3120101 	tst	r2, #1073741824	; 0x40000000
    8328:	1afffffc 	bne	8320 <rightmail$>
    832c:	e5902000 	ldr	r2, [r0]
    8330:	e202300f 	and	r3, r2, #15
    8334:	e1330001 	teq	r3, r1
    8338:	1afffff8 	bne	8320 <rightmail$>
    833c:	e3c2000f 	bic	r0, r2, #15
    8340:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8344:	2000b880 	.word	0x2000b880

00008348 <main>:
    8348:	e3a0d902 	mov	sp, #32768	; 0x8000
    834c:	e3a00b01 	mov	r0, #1024	; 0x400
    8350:	e3a01c03 	mov	r1, #768	; 0x300
    8354:	e3a02010 	mov	r2, #16
    8358:	ebffff9e 	bl	81d8 <InitialiseFrameBuffer>
    835c:	e3300000 	teq	r0, #0
    8360:	1a000006 	bne	8380 <noError$>
    8364:	e3a00010 	mov	r0, #16
    8368:	e3a01001 	mov	r1, #1
    836c:	ebffffb3 	bl	8240 <SetGpioFunction>
    8370:	e3a00010 	mov	r0, #16
    8374:	e3a01000 	mov	r1, #0
    8378:	ebffffc4 	bl	8290 <SetGpio>

0000837c <error$>:
    837c:	eafffffe 	b	837c <error$>

00008380 <noError$>:
    8380:	ebffff24 	bl	8018 <SetGraphicsAddress>
    8384:	e3a04000 	mov	r4, #0

00008388 <loop$>:
    8388:	e59f00a8 	ldr	r0, [pc, #168]	; 8438 <loop$+0xb0>
    838c:	e3a0100a 	mov	r1, #10
    8390:	e59f20a4 	ldr	r2, [pc, #164]	; 843c <loop$+0xb4>
    8394:	e1a03224 	lsr	r3, r4, #4
    8398:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    839c:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    83a0:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    83a4:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    83a8:	eb000093 	bl	85fc <FormatString>
    83ac:	e28dd010 	add	sp, sp, #16
    83b0:	e1a01000 	mov	r1, r0
    83b4:	e59f0080 	ldr	r0, [pc, #128]	; 843c <loop$+0xb4>
    83b8:	e3a02000 	mov	r2, #0
    83bc:	e1a03004 	mov	r3, r4
    83c0:	e3530e2f 	cmp	r3, #752	; 0x2f0
    83c4:	82433c03 	subhi	r3, r3, #768	; 0x300
    83c8:	82822080 	addhi	r2, r2, #128	; 0x80
    83cc:	e3530e2f 	cmp	r3, #752	; 0x2f0
    83d0:	82433c03 	subhi	r3, r3, #768	; 0x300
    83d4:	82822080 	addhi	r2, r2, #128	; 0x80
    83d8:	e3530e2f 	cmp	r3, #752	; 0x2f0
    83dc:	82433c03 	subhi	r3, r3, #768	; 0x300
    83e0:	82822080 	addhi	r2, r2, #128	; 0x80
    83e4:	e3530e2f 	cmp	r3, #752	; 0x2f0
    83e8:	82433c03 	subhi	r3, r3, #768	; 0x300
    83ec:	82822080 	addhi	r2, r2, #128	; 0x80
    83f0:	e3530e2f 	cmp	r3, #752	; 0x2f0
    83f4:	82433c03 	subhi	r3, r3, #768	; 0x300
    83f8:	82822080 	addhi	r2, r2, #128	; 0x80
    83fc:	e3530e2f 	cmp	r3, #752	; 0x2f0
    8400:	82433c03 	subhi	r3, r3, #768	; 0x300
    8404:	82822080 	addhi	r2, r2, #128	; 0x80
    8408:	e1a05000 	mov	r5, r0
    840c:	e1a06001 	mov	r6, r1
    8410:	e1a00003 	mov	r0, r3
    8414:	e0800002 	add	r0, r0, r2
    8418:	ebfffef9 	bl	8004 <SetForeColour>
    841c:	e1a00005 	mov	r0, r5
    8420:	e1a01006 	mov	r1, r6
    8424:	ebffff4b 	bl	8158 <DrawString>
    8428:	e59f0010 	ldr	r0, [pc, #16]	; 8440 <loop$+0xb8>
    842c:	eb000022 	bl	84bc <TimerFunction>
    8430:	e2844010 	add	r4, r4, #16
    8434:	eaffffd3 	b	8388 <loop$>
    8438:	00008f78 	.word	0x00008f78
    843c:	00008f82 	.word	0x00008f82
    8440:	000186a0 	.word	0x000186a0

00008444 <DivideU32>:
    8444:	e16f2f11 	clz	r2, r1
    8448:	e16f3f10 	clz	r3, r0
    844c:	e0522003 	subs	r2, r2, r3
    8450:	e1a03211 	lsl	r3, r1, r2
    8454:	e1a01000 	mov	r1, r0
    8458:	e3a00000 	mov	r0, #0
    845c:	ba000009 	blt	8488 <divideU32Return$>

00008460 <divideU32Loop$>:
    8460:	e1510003 	cmp	r1, r3
    8464:	ba000003 	blt	8478 <divideU32LoopContinue$>
    8468:	e2800001 	add	r0, r0, #1
    846c:	e0511003 	subs	r1, r1, r3
    8470:	01a00210 	lsleq	r0, r0, r2
    8474:	0a000003 	beq	8488 <divideU32Return$>

00008478 <divideU32LoopContinue$>:
    8478:	e2522001 	subs	r2, r2, #1
    847c:	a1a030a3 	lsrge	r3, r3, #1
    8480:	a1a00080 	lslge	r0, r0, #1
    8484:	aafffff5 	bge	8460 <divideU32Loop$>

00008488 <divideU32Return$>:
    8488:	e1a0f00e 	mov	pc, lr

0000848c <Random>:
    848c:	e3a01cef 	mov	r1, #61184	; 0xef00
    8490:	e0010190 	mul	r1, r0, r1
    8494:	e0010190 	mul	r1, r0, r1
    8498:	e0811000 	add	r1, r1, r0
    849c:	e2810049 	add	r0, r1, #73	; 0x49
    84a0:	e1a0f00e 	mov	pc, lr

000084a4 <GetTimerAddress>:
    84a4:	e59f0034 	ldr	r0, [pc, #52]	; 84e0 <loop$+0x14>
    84a8:	e1a0f00e 	mov	pc, lr

000084ac <GetTimeStamp>:
    84ac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    84b0:	ebfffffb 	bl	84a4 <GetTimerAddress>
    84b4:	e1c000d4 	ldrd	r0, [r0, #4]
    84b8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000084bc <TimerFunction>:
    84bc:	e1a03000 	mov	r3, r0
    84c0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    84c4:	ebfffff8 	bl	84ac <GetTimeStamp>
    84c8:	e1a02000 	mov	r2, r0

000084cc <loop$>:
    84cc:	ebfffff6 	bl	84ac <GetTimeStamp>
    84d0:	e0401002 	sub	r1, r0, r2
    84d4:	e1510003 	cmp	r1, r3
    84d8:	9afffffb 	bls	84cc <loop$>
    84dc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    84e0:	20003000 	.word	0x20003000

000084e4 <FindTag>:
    84e4:	e2400001 	sub	r0, r0, #1
    84e8:	e3500008 	cmp	r0, #8
    84ec:	83a00000 	movhi	r0, #0
    84f0:	81a0f00e 	movhi	pc, lr
    84f4:	e59f1054 	ldr	r1, [pc, #84]	; 8550 <tagLoop$+0x2c>

000084f8 <tagReturn$>:
    84f8:	e0812100 	add	r2, r1, r0, lsl #2
    84fc:	e5922000 	ldr	r2, [r2]
    8500:	e3320000 	teq	r2, #0
    8504:	11a00002 	movne	r0, r2
    8508:	11a0f00e 	movne	pc, lr
    850c:	e5912000 	ldr	r2, [r1]
    8510:	e3320000 	teq	r2, #0
    8514:	13a00000 	movne	r0, #0
    8518:	11a0f00e 	movne	pc, lr
    851c:	e3a02c01 	mov	r2, #256	; 0x100
    8520:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)

00008524 <tagLoop$>:
    8524:	e1d230b4 	ldrh	r3, [r2, #4]
    8528:	e2533001 	subs	r3, r3, #1
    852c:	b49d4004 	poplt	{r4}		; (ldrlt r4, [sp], #4)
    8530:	bafffff0 	blt	84f8 <tagReturn$>
    8534:	e0813103 	add	r3, r1, r3, lsl #2
    8538:	e5934000 	ldr	r4, [r3]
    853c:	e3340000 	teq	r4, #0
    8540:	05832000 	streq	r2, [r3]
    8544:	e5923000 	ldr	r3, [r2]
    8548:	e0822103 	add	r2, r2, r3, lsl #2
    854c:	eafffff4 	b	8524 <tagLoop$>
    8550:	00008f82 	.word	0x00008f82

00008554 <ReverseString>:
    8554:	e0811000 	add	r1, r1, r0
    8558:	e2411001 	sub	r1, r1, #1

0000855c <revLoop$>:
    855c:	e1510000 	cmp	r1, r0
    8560:	91a0f00e 	movls	pc, lr
    8564:	e5d02000 	ldrb	r2, [r0]
    8568:	e5d13000 	ldrb	r3, [r1]
    856c:	e5c03000 	strb	r3, [r0]
    8570:	e5c12000 	strb	r2, [r1]
    8574:	e2800001 	add	r0, r0, #1
    8578:	e2411001 	sub	r1, r1, #1
    857c:	eafffff6 	b	855c <revLoop$>

00008580 <UnsignedString>:
    8580:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    8584:	e1a05001 	mov	r5, r1
    8588:	e1a06002 	mov	r6, r2
    858c:	e3a07000 	mov	r7, #0

00008590 <charLoop$>:
    8590:	e1a01006 	mov	r1, r6
    8594:	ebffffaa 	bl	8444 <DivideU32>
    8598:	e3510009 	cmp	r1, #9
    859c:	92811030 	addls	r1, r1, #48	; 0x30
    85a0:	82811057 	addhi	r1, r1, #87	; 0x57
    85a4:	e3350000 	teq	r5, #0
    85a8:	17c51007 	strbne	r1, [r5, r7]
    85ac:	e2877001 	add	r7, r7, #1
    85b0:	e3300000 	teq	r0, #0
    85b4:	1afffff5 	bne	8590 <charLoop$>
    85b8:	e3350000 	teq	r5, #0
    85bc:	11a00005 	movne	r0, r5
    85c0:	11a01007 	movne	r1, r7
    85c4:	1bffffe2 	blne	8554 <ReverseString>
    85c8:	e1a00007 	mov	r0, r7
    85cc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

000085d0 <SignedString>:
    85d0:	e3500000 	cmp	r0, #0
    85d4:	aaffffe9 	bge	8580 <UnsignedString>
    85d8:	e2600000 	rsb	r0, r0, #0
    85dc:	e3310000 	teq	r1, #0
    85e0:	13a0302d 	movne	r3, #45	; 0x2d
    85e4:	15c13000 	strbne	r3, [r1]
    85e8:	12811001 	addne	r1, r1, #1
    85ec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    85f0:	ebffffe2 	bl	8580 <UnsignedString>
    85f4:	e2800001 	add	r0, r0, #1
    85f8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000085fc <FormatString>:
    85fc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    8600:	e1a04000 	mov	r4, r0
    8604:	e1a05001 	mov	r5, r1
    8608:	e1a06002 	mov	r6, r2
    860c:	e1a07003 	mov	r7, r3
    8610:	e28d801c 	add	r8, sp, #28
    8614:	e3a09000 	mov	r9, #0

00008618 <formatLoop$>:
    8618:	e2555001 	subs	r5, r5, #1
    861c:	b1a00009 	movlt	r0, r9
    8620:	b8bd83f0 	poplt	{r4, r5, r6, r7, r8, r9, pc}
    8624:	e5d40000 	ldrb	r0, [r4]
    8628:	e2844001 	add	r4, r4, #1
    862c:	e3300025 	teq	r0, #37	; 0x25
    8630:	0a000004 	beq	8648 <formatArg$>

00008634 <formatChar$>:
    8634:	e3360000 	teq	r6, #0
    8638:	15c60000 	strbne	r0, [r6]
    863c:	12866001 	addne	r6, r6, #1
    8640:	e2899001 	add	r9, r9, #1
    8644:	eafffff3 	b	8618 <formatLoop$>

00008648 <formatArg$>:
    8648:	e2555001 	subs	r5, r5, #1
    864c:	b1a00009 	movlt	r0, r9
    8650:	b8bd83f0 	poplt	{r4, r5, r6, r7, r8, r9, pc}
    8654:	e5d40000 	ldrb	r0, [r4]
    8658:	e2844001 	add	r4, r4, #1
    865c:	e3300025 	teq	r0, #37	; 0x25
    8660:	0afffff3 	beq	8634 <formatChar$>
    8664:	e3300063 	teq	r0, #99	; 0x63
    8668:	01a00007 	moveq	r0, r7
    866c:	05987000 	ldreq	r7, [r8]
    8670:	02888004 	addeq	r8, r8, #4
    8674:	0affffee 	beq	8634 <formatChar$>
    8678:	e3300073 	teq	r0, #115	; 0x73
    867c:	0a000007 	beq	86a0 <formatString$>
    8680:	e3300064 	teq	r0, #100	; 0x64
    8684:	0a000010 	beq	86cc <formatSigned$>
    8688:	e3300075 	teq	r0, #117	; 0x75
    868c:	13300078 	teqne	r0, #120	; 0x78
    8690:	13300062 	teqne	r0, #98	; 0x62
    8694:	1330006f 	teqne	r0, #111	; 0x6f
    8698:	0a000015 	beq	86f4 <formatUnsigned$>
    869c:	eaffffdd 	b	8618 <formatLoop$>

000086a0 <formatString$>:
    86a0:	e5d70000 	ldrb	r0, [r7]
    86a4:	e3300000 	teq	r0, #0
    86a8:	05987000 	ldreq	r7, [r8]
    86ac:	02888004 	addeq	r8, r8, #4
    86b0:	0affffd8 	beq	8618 <formatLoop$>
    86b4:	e2899001 	add	r9, r9, #1
    86b8:	e3360000 	teq	r6, #0
    86bc:	15c60000 	strbne	r0, [r6]
    86c0:	12866001 	addne	r6, r6, #1
    86c4:	e2877001 	add	r7, r7, #1
    86c8:	eafffff4 	b	86a0 <formatString$>

000086cc <formatSigned$>:
    86cc:	e1a00007 	mov	r0, r7
    86d0:	e5987000 	ldr	r7, [r8]
    86d4:	e2888004 	add	r8, r8, #4
    86d8:	e1a01006 	mov	r1, r6
    86dc:	e3a0200a 	mov	r2, #10
    86e0:	ebffffba 	bl	85d0 <SignedString>
    86e4:	e3360000 	teq	r6, #0
    86e8:	10866000 	addne	r6, r6, r0
    86ec:	e0899000 	add	r9, r9, r0
    86f0:	eaffffc8 	b	8618 <formatLoop$>

000086f4 <formatUnsigned$>:
    86f4:	e3300075 	teq	r0, #117	; 0x75
    86f8:	03a0200a 	moveq	r2, #10
    86fc:	e3300078 	teq	r0, #120	; 0x78
    8700:	03a02010 	moveq	r2, #16
    8704:	e3300062 	teq	r0, #98	; 0x62
    8708:	03a02002 	moveq	r2, #2
    870c:	e330006f 	teq	r0, #111	; 0x6f
    8710:	03a02008 	moveq	r2, #8
    8714:	e1a00007 	mov	r0, r7
    8718:	e5987000 	ldr	r7, [r8]
    871c:	e2888004 	add	r8, r8, #4
    8720:	e1a01006 	mov	r1, r6
    8724:	ebffff95 	bl	8580 <UnsignedString>
    8728:	e3360000 	teq	r6, #0
    872c:	10866000 	addne	r6, r6, r0
    8730:	e0899000 	add	r9, r9, r0
    8734:	eaffffb7 	b	8618 <formatLoop$>
